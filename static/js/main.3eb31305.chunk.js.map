{"version":3,"sources":["Components/Scroll.jsx","Components/graph.jsx","Components/EC.jsx","App.js","serviceWorker.js","index.js"],"names":["Scroll","props","direction","wrap","undefined","flexDirection","myStyle","overflowY","border","height","padding","paddingTop","width","display","flexWrap","style","className","children","Graph","k","ks","y","measure","data","i","length","push","x","label","flexGrow","name","containerComponent","d","tickValues","tickFormat","dependentAxis","toFixed","labelComponent","stroke","parent","TabPanel","value","index","other","role","hidden","id","aria-labelledby","Box","a11yProps","frequency","column","count","done","quasi","includes","myobj","j","sort","a","b","parseInt","number","median","rows","freqs","medianPos","n","lcount","divisionVal","rcount","dimChooser","rows2","frequncies","freqSetsRank","temp","maxMin","col","EC","JSON","parse","stringify","headers","reGenerate","allEcTables","useState","ecTable","setectable","generalizedTable","setgeneralizedTable","setDone","CDM","setCDM","ILOSS","setILOSS","setks","ILOSSList","setILOSSList","CDMList","setCDMList","two","five","l_diversity","setl_diversity","violation_2","setviolation_2","violation_5","setviolation_5","useEffect","reload","console","log","concat","currentTable","inprogress","shift","allDimFreqs","currentDim","fsColumn","mymedian","lhs","rhs","z","sensitive","myrow","cellPadding","cellSpacing","rowSpan","iLOSS","T","allmaxes","Array","fill","allmins","summation","maxes","mins","reduce","genTable","cdm","Math","pow","setValue","Tabs","onChange","event","newValue","aria-label","centered","Tab","justifyContent","alignContent","marginBottom","mytable","ECheaders","App","setData","link","setlink","setk","loaded","setloaded","setreGenerate","setreload","Papa","header","delimiter","download","complete","results","pop","myrows","currentrow","onSubmit","preventDefault","type","target","min","max","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3eb31305.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n  var direction;\r\n  var wrap =\"\"\r\n  if ( props.flexDirection !== undefined){\r\n    direction = props.flexDirection\r\n  }else {\r\n    direction = \"row\"\r\n    wrap = \"wrap\"\r\n  }\r\n  let myStyle = {overflowY:'scroll', border:'1px solid black', height:'45rem', padding:'1rem', paddingTop:'0', width:\"100%\",  display: \"flex\",\r\n  flexDirection:direction,\r\n  flexWrap: wrap} \r\n  return (\r\n    <div style={myStyle} className=\" ma0\">\r\n    {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scroll;\r\n","import React from 'react';\r\nimport * as V from 'victory';\r\nimport { VictoryLine, VictoryChart,VictoryVoronoiContainer,VictoryTooltip,VictoryAxis} from 'victory';\r\n\r\nconst Graph = (props) =>{\r\n    //x\r\n    let k = props.ks\r\n    //y\r\n    let y = props.measure\r\n    let data =[];\r\n    for (let i = 0; i < k.length; i++) {\r\n        data.push({x:k[i],y:y[i],label:k[i]})     \r\n    }\r\n    // data.push({x:3,y:0.6,label:\"test\"})\r\n    return (\r\n      <div className=\"ma4 \" style={{flexGrow: \"1\"}}>\r\n          <h4 className=\"ma0\">{props.name}</h4>\r\n        <VictoryChart\r\n        containerComponent={\r\n            <VictoryVoronoiContainer label={d => `${d.label}`} />\r\n          }\r\n          >\r\n               <VictoryAxis\r\n          // tickValues specifies both the number of ticks and where\r\n          // they are placed on the axis\r\n          tickValues={k}\r\n          tickFormat={k}\r\n        />\r\n         <VictoryAxis\r\n          dependentAxis\r\n          // tickFormat specifies how ticks should be displayed\r\n          tickFormat={(y)=>{return `${y.toFixed(2)}`}}\r\n        />\r\n          <VictoryLine\r\n          labelComponent={<VictoryTooltip />}\r\n            style={{\r\n              data: { stroke: \"#c43a31\" },\r\n              parent: { border: \"1px solid #ccc\" },\r\n              \r\n            }}\r\n            data={data}\r\n            name = \"series-1\"\r\n          ></VictoryLine>\r\n        </VictoryChart>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Graph;\r\n","import React,{useState, useEffect, Fragment} from 'react';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Scroll from './Scroll'\r\nimport Graph from './graph'\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box >\r\n            {/* <Typography> */}\r\n                {children}\r\n                {/* </Typography> */}\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  function a11yProps(index) {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\n  \r\n\r\nconst frequency = (data, column) =>{\r\n    var count = []\r\n    var done = []\r\n    for (let i = 0; i < data.length; i++) {\r\n        const quasi = data[i][column];\r\n        if (done.includes(quasi)) {\r\n            continue\r\n        }\r\n        // //console.log(i , count);\r\n        var myobj = {}\r\n        myobj[\"number\"] = quasi;\r\n        myobj[\"count\"] = 0;\r\n        // //console.log(myobj);\r\n         \r\n        for (let j = i; j < data.length; j++) {\r\n            if (quasi==data[j][column]) {\r\n                myobj[\"count\"]++;  \r\n            }\r\n        }\r\n        count.push(myobj)\r\n        done.push(quasi)\r\n    }\r\n    count = count.sort((a,b) => {\r\n        if ( parseInt(a.number) <parseInt(b.number) ){\r\n            return -1\r\n        }\r\n        else{\r\n            return 1\r\n        }\r\n    })\r\nreturn count;\r\n}\r\n\r\n\r\nvar median = (rows, freqs, k) =>{\r\n    /**  \r\n     * * returns at which value is the median if it exists\r\n     * * otherwise return -1\r\n    */\r\n    let medianPos;\r\n    let n = rows.length;\r\n    if ( n%2 != 0){\r\n        medianPos = (n+1)/2\r\n    }else{\r\n        medianPos = n/2\r\n    }\r\n    //console.log(`median position ${medianPos} , len ${n}`);\r\n    //console.log(freqs);\r\n    //we got the position now at what value is that ? \r\n    let lcount = 0;\r\n    let divisionVal = 0;\r\n    let rcount = 0;\r\n    for (let i = 0; i < freqs.length; i++) {\r\n        if (lcount < medianPos){\r\n            lcount += freqs[i].count\r\n            divisionVal = freqs[i].number\r\n        }else{\r\n            rcount +=  freqs[i].count\r\n        }\r\n            if ( rcount >= k){\r\n                if( lcount >= k){\r\n                    return divisionVal\r\n                }\r\n                return -1;\r\n            }\r\n    }\r\n    return -1\r\n\r\n}\r\n\r\nconst dimChooser = (rows2) =>{\r\n    let frequncies = [];\r\n    let freqSetsRank = [];\r\n    for (let i = 0; i < rows2[0].length; i++) {\r\n        frequncies.push(frequency(rows2,i))\r\n    }\r\n    // let max =0;\r\n    // let col =0;\r\n    for (let i = 0; i < frequncies.length; i++) {\r\n        let temp =parseInt(frequncies[i][frequncies[i].length-1].number- parseInt(frequncies[i][0].number) )\r\n        freqSetsRank.push({maxMin: temp, col: i, freqs: frequncies[i]})\r\n        // if ( temp > max){\r\n        //     max = temp ;\r\n        //     col = i;\r\n        // }\r\n    }\r\n    // //console.log(\"setsRank\");\r\n    // //console.log(freqSetsRank);\r\n    freqSetsRank = freqSetsRank.sort((a,b)=>{\r\n        if(a.maxMin>b.maxMin){\r\n            return -1;\r\n        }else{\r\n            return 1;\r\n        }\r\n    })\r\n    // freqSetsRank.forEach(element => {\r\n    //     delete element.maxMin;\r\n    // });\r\n    //console.log(\"Sorted setsRank\");\r\n    //console.log(freqSetsRank);\r\n    //console.log(\"all cols freqs\");\r\n    //console.log(frequncies);\r\n    return freqSetsRank\r\n}\r\n\r\n\r\n\r\n// ---------------------------------\r\nconst EC = (props)=>{\r\n    const rows = JSON.parse(JSON.stringify(props.rows));\r\n    const k = parseInt(props.k)\r\n    const headers = props.headers\r\n    const reGenerate = props.reGenerate\r\n    //console.log(\"our headers\");\r\n    //console.log(headers);\r\n    var allEcTables =[]\r\n    //console.log(`k=${k}`);\r\n\r\n    const [ecTable, setectable] = useState([]);\r\n    const [generalizedTable, setgeneralizedTable] = useState([]);\r\n    const [done, setDone] = useState();\r\n    const [CDM, setCDM] = useState();\r\n    const [ILOSS, setILOSS] = useState();\r\n    const [ks, setks] = useState([]);\r\n    const [ILOSSList, setILOSSList] = useState([]);\r\n    const [CDMList, setCDMList] = useState([]);\r\n    const [l_diversity, setl_diversity] = useState({two:true,five:true});\r\n    const [violation_2, setviolation_2] = useState([])\r\n    const [violation_5, setviolation_5] = useState([])\r\n\r\n    useEffect(() => {\r\n        setks([])\r\n        setILOSSList([])\r\n        setCDMList([])\r\n     },[props.reload])\r\n//choosing age to begin with \r\n\r\n// starting with findin the frequency of the dimension/quasi\r\n\r\n// first choose the most suitable dimension\r\n/**\r\n * * large difference between min and max\r\n * * have more \"unique\" values \r\n */\r\nuseEffect(() => {\r\n    if(reGenerate<2){\r\n    console.log(\"entered\");\r\n    setDone( \"(Processing Data)\")\r\n    if(!ks.includes(k)){\r\n    setks(ks.concat(k))\r\n    }\r\n    setviolation_2([])\r\n    setviolation_5([])\r\n    setl_diversity({two:false,five:false})\r\n    //console.log(rows);\r\nlet inprogress = [rows];\r\nlet done = [];\r\nlet currentTable;\r\ndo {\r\n    currentTable = inprogress.shift()\r\n    // dimChooser will return all the frequency sets for the current table, sorted\r\n    // on which is better to take \r\n    //console.log(\"this table\",currentTable);\r\n    let allDimFreqs = dimChooser(currentTable)\r\n    //console.log(\"progress\",allDimFreqs);\r\n\r\n    // now we found the frequency set\r\n        do {\r\n          let currentDim = allDimFreqs.shift();\r\n          //console.log(\"current dim \", currentDim);\r\n          var fsColumn = currentDim.col;\r\n          var freqs = currentDim.freqs;\r\n          //console.log(\"frequncies\");\r\n          //console.log(freqs);\r\n          // find the split value\r\n          var mymedian = median(currentTable, freqs, k);\r\n          //console.log(\"MEDIAN VALUE: \",mymedian);\r\n          // if there was a median\r\n          var lhs = [];\r\n          var rhs = [];\r\n          if (mymedian != -1) {\r\n            for (let i = 0; i < currentTable.length; i++) {\r\n                let x = parseInt(currentTable[i][fsColumn])\r\n                let y = parseInt(mymedian)\r\n              if (x <= y) {\r\n                //   //console.log(currentTable[i][fsColumn] , \"the median\" , mymedian);\r\n                lhs.push(currentTable[i]);\r\n              } else {\r\n                rhs.push(currentTable[i]);\r\n              }\r\n            }\r\n            inprogress.push(lhs);\r\n            inprogress.push(rhs);\r\n            //console.log(\"added\", lhs);\r\n            //console.log(\"added\", rhs);\r\n            //console.log(\"that's it\", allDimFreqs.length);\r\n            break;\r\n          } else if (mymedian == -1 && allDimFreqs.length == 0) {\r\n            // exehust other options\r\n            //return the same table\r\n            //console.log(\"current table\",currentTable);\r\n            done.push(currentTable);\r\n            //console.log(\"that's it\", allDimFreqs.length);\r\n            break;\r\n          }\r\n          //console.log(\"not it\", allDimFreqs.length);\r\n        } while (allDimFreqs.length > 0);\r\n\r\n}while(inprogress.length > 0)\r\n\r\n// for (let i = 0; i < done.length; i++) {\r\n//   done[i].sort((a, b) => {\r\n//     if (a[0][0] > b[0][0]) {\r\n//       return 1;\r\n//     }else{\r\n//         return -1;\r\n//     }\r\n//   });\r\n// }\r\n//console.log(mymedian);\r\n//console.log(rhs);\r\n\r\n// don't forget to call each EC by it's name \r\n\r\n// generating EC table \r\nlet l = [2,5]\r\nfor (let z = 0; z < done.length; z++) {\r\n    let ecTable = []; \r\n    let sensitive = []\r\nfor (let i = 0; i < done[z].length; i++) {\r\n    \r\n        if(!sensitive.includes(done[z][i][done[z][i].length-1])){\r\n            sensitive.push(done[z][i][done[z][i].length-1])\r\n        }\r\n    let myrow=[];\r\n    for (let j = 0; j < done[z][i].length; j++) {\r\n      myrow.push(<td className=\" pa2\">{done[z][i][j]}</td>)\r\n    }\r\n    ecTable.push(<tr>{myrow}</tr>) \r\n}\r\n\r\necTable = [\r\n<table className=\"shadow-2  ba center ma2 mt0 \" cellPadding=\"0\" cellSpacing=\"0\">\r\n{headers}\r\n<tbody>   \r\n    <tr>\r\n<td rowSpan=\"0\" className=\" pa2 br\">EC#{z}<br></br> {done[z].length}</td>\r\n</tr> \r\n{ecTable}\r\n</tbody>\r\n</table>\r\n]\r\n// if (k===9){\r\n    // console.log(\"sensitive array = \", sensitive , \" \", sensitive.length);\r\nif(sensitive.length < 2){\r\n    // console.log(\"failed at 2\");\r\n    setl_diversity({two:false, ...l_diversity})\r\n    setviolation_2(ecTable)\r\n}\r\nif(sensitive.length < 5){\r\n    // console.log(\"failed at 5\");\r\n    setl_diversity({...l_diversity,five:false})\r\n    setviolation_5(ecTable)\r\n}\r\n\r\n// }\r\nallEcTables.push(ecTable)\r\n}\r\n  \r\nsetectable(allEcTables)\r\n\r\n//generate generalized table \r\n// and calculatte ILOSS\r\nlet T = rows.length\r\n// assuming 1 sensitive attribute \r\nlet n = rows[0].length-1\r\n// Ui\r\nlet allmaxes =new Array(rows[0].length-1).fill(0)\r\n//Li\r\nlet allmins =new Array(rows[0].length-1).fill(999999)\r\n// summation (Uij-Lij)\r\nlet summation =new Array(rows[0].length-1).fill(0);\r\nlet iLOSS = 0;\r\n//over ECs\r\n//z=EC , i=row, j = column\r\n// console.log(done);\r\n// setDone(done.length)\r\nfor (let z = 0; z < done.length; z++) {\r\n    //EC\r\n    let maxes = new Array(done[z][0].length-1).fill(0);\r\n    let mins = new Array(done[z][0].length-1).fill(999999);\r\n    for (let i = 0; i < done[z].length; i++) {\r\n        // let myrow=[];\r\n        // Rows\r\n        for (let j = 0; j < done[z][i].length-1; j++) {\r\n            let x = parseInt(done[z][i][j])\r\n            if(x>maxes[j]){\r\n                maxes[j] = x\r\n            } if (x < mins[j]){\r\n                mins[j] = x  \r\n            }\r\n            if(x>allmaxes[j]){\r\n                allmaxes[j] = x\r\n            } if (x < allmins[j]){\r\n                allmins[j] = x  \r\n            }\r\n        // myrow.push(<td className=\"ba pa2\">{done[z][i][j]}</td>)\r\n        }\r\n        \r\n        // genTable.push(<tr>{myrow}</tr>) \r\n    }\r\n    \r\n    \r\n    // now i have the min and max for this EC just rename the things\r\n    for (let i = 0; i < done[z].length; i++) {\r\n        for (let j = 0; j < done[z][i].length-1; j++) {\r\n            if (maxes[j] !=mins[j]){\r\n                done[z][i][j] = `[${maxes[j]} - ${mins[j]}]`\r\n            }\r\n            summation[j] += (maxes[j] - mins[j]);\r\n        }\r\n    }\r\n        // console.log(\"Summation\");\r\n        // console.log(summation);\r\n}\r\nfor (let i = 0; i < summation.length; i++) {\r\n    if(allmaxes[i]=== allmins[i]){\r\n        // summation[i] = 0;\r\n        continue\r\n    }\r\n    summation[i] = summation[i]/(allmaxes[i]-allmins[i])\r\n}\r\nsummation = summation.reduce((a,b)=> { return a+b},0)\r\n// console.log(\"new \",summation);\r\niLOSS = ((1/(T*n))*(summation))\r\nsetILOSS(iLOSS)\r\nif(!ks.includes(k)){\r\n    setILOSSList(ILOSSList.concat(iLOSS))\r\n}\r\n// console.log(\"maxmin\");\r\n// console.log(allmaxes);\r\n// console.log(allmins);\r\nlet genTable = [];\r\nlet cdm = 0;\r\nfor (let z = 0; z < done.length; z++) {\r\n    genTable.push(\r\n        <tr>\r\n        <td rowSpan={done[z].length+1} className=\" pa2 br\">\r\n          EC#{z}\r\n          <br></br> {done[z].length}\r\n        </td>\r\n        </tr>\r\n      );  \r\n  for (let i = 0; i < done[z].length; i++) {\r\n    let myrow = [];\r\n    for (let j = 0; j < done[z][i].length; j++) {\r\n      myrow.push(<td className=\" pa2\">{done[z][i][j]}</td>);\r\n    }\r\n    genTable.push(<tr>{myrow}</tr>);\r\n  }\r\n  cdm += Math.pow(done[z].length, 2);;\r\n}\r\nsetCDM(cdm)\r\nif(!ks.includes(k)){\r\nsetCDMList(CDMList.concat(cdm))\r\n}\r\ngenTable = [\r\n    <table className=\"shadow-2 ba center ma2 sticky-head\" cellPadding=\"0\" cellSpacing=\"0\">\r\n      {headers}\r\n      <tbody>\r\n        {genTable}\r\n      </tbody>\r\n    </table>,\r\n  ];\r\n//   allEcTables.push(ecTable);\r\nsetgeneralizedTable(genTable);\r\n// console.log(rows);\r\n  console.log(\"done\");\r\n  setDone(done.length)}\r\n}, [reGenerate]);\r\n\r\nconst [value, setValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n      return (\r\n        <div className=\"center\">\r\n          {done ? <h3 className=\"center\">Totall of {done} ECs</h3> : \"\"}\r\n\r\n            \r\n          <Tabs\r\n            value={value}\r\n            onChange={handleChange}\r\n            aria-label=\"simple tabs example\"\r\n            centered\r\n          >\r\n            <Tab label=\"Generalized Table\" {...a11yProps(0)} />\r\n            <Tab label=\"ECs Tables\" {...a11yProps(1)} />\r\n            <Tab label=\"Stats\" {...a11yProps(2)} />\r\n          </Tabs>\r\n          {reGenerate<2 ? \r\n          <Fragment>\r\n          <TabPanel value={value} index={0}>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                flexWrap: \"wrap\",\r\n              }}\r\n            >\r\n              <Scroll>{generalizedTable }</Scroll>\r\n            </div>\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1}>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                flexWrap: \"wrap\",\r\n              }}\r\n            >\r\n              <Scroll>{ ecTable }</Scroll>\r\n            </div>\r\n          </TabPanel>\r\n          <TabPanel value={value} index={2}>\r\n            <Scroll flexDirection={\"column\"}>\r\n            <h4>The displayed values are for the current K</h4>\r\n              <p>CDM = {CDM}</p>\r\n              <p>ILOSS = {ILOSS}</p>\r\n              <p>Utility = {1-ILOSS}</p>\r\n              { ks.length>1?\r\n              <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                flexWrap: \"wrap\",\r\n                justifyContent: \"center\",\r\n                alignContent:\"stretch\",\r\n                marginBottom:\"1rem\"\r\n              }}\r\n              className=\"\"\r\n            >\r\n              <Graph ks={ks} measure={ILOSSList} name=\"ILOSS\" ></Graph>\r\n              <Graph ks={ks} measure={CDMList} name=\"CDMLIST\" ></Graph>\r\n              </div>\r\n                :\r\n                \"\"\r\n                }\r\n            <div>\r\n                \r\n            { \r\n            violation_2.length != 0?\r\n            <Fragment><h4>A Class that violate l-diversity of 2</h4>{violation_2} </Fragment>\r\n            :\r\n            \"\"\r\n            }\r\n            { \r\n            violation_5.length != 0?\r\n            <Fragment><h4>A Class that violate l-diversity of 5</h4>{violation_5} </Fragment>\r\n            :\r\n            \"\"}\r\n            </div>\r\n            </Scroll>\r\n          </TabPanel>\r\n          </Fragment>: \"\"}\r\n          {/* {reGenerate < 2 ?  {ecTable}  generalizedTable : <div></div>} */}\r\n        </div>\r\n      );\r\n    \r\n}\r\n\r\n\r\nexport default EC;","import React,{useState, useEffect} from 'react';\nimport './App.css';\nimport Papa from 'papaparse';\n\nimport EC from './Components/EC'\nimport './tables.css'\n\nvar mytable = [];\nvar ECheaders = [];\n\nfunction App() {\n  const [data, setData] = useState([{}]);\n  const [link, setlink] = useState(\"ipums-solution-test.csv\");\n  const [k, setk] = useState(2);\n  const [loaded, setloaded] = useState(false);\n  const [reGenerate, setreGenerate] = useState(3);\n  const [reload, setreload] = useState(false);\n\n// Age Gender Marital Race Status Birth place Language Occupation Income (K) \n\n  const onkChange = (event)=>{\n    setk( event.target.value);\n    // console.log(event.target.value);\n  }\n  const onLinkChange = (event)=>{\n    setlink( event.target.value);\n    // console.log(event.target.value);\n  }\n  const submitHandler = (event)=>{\n    event.preventDefault();\n    if ( k>=2 && k<11){\n      if(reGenerate===0){\n        setreGenerate(1)    \n      }else{\n    setreGenerate(0)\n  }\n  }\n    // console.log(\"submitted\");\n  }\n  const dataSubmitHandler =(event)=>{\n    event.preventDefault();\n    setreload(!reload)\n    setloaded(false)\n    setreGenerate(3)\n    // console.log(\"submitted\");\n  }\n\n   // Similar to componentDidMount and componentDidUpdate:\n   var ECheader=[]\n\n  useEffect(() => {\n    \nvar rows;\n//http://localhost:3000/ipums-solution.csv\nPapa.parse(link, {\n    header: false,\n    delimiter: \";\",\n    download: true,\n    complete: function(results) {\n        console.log(\"Finished:\", results.data);\n    rows = results.data;\n    let headers=[];\n    for (let i = 0; i < rows[0].length; i++) {\n      headers.push(<th className=\" pa2\">{rows[0][i]}</th>) \n    }\n    mytable =[ \n    <thead>\n    <tr>\n    {headers}\n    </tr>\n    </thead>\n    ]\n    ECheaders=[\n    <thead>\n      <tr>\n        <th className=\" pa2\">EC</th>\n      {headers}\n      </tr>\n      </thead>]\n      //clearing extra empty lines \n      while(rows[rows.length-1].length === 1){\n          rows.pop();\n      }\n    // rows.pop();\n    //deleting headers row \n    rows.shift()\n    let myrows = []\n    for (let i = 0; i < 19; i++) {\n      let currentrow=[];\n      for (let j = 0; j < rows[i].length; j++) {\n        currentrow.push(<td className=\" pa2\">{rows[i][j]}</td>)\n      }\n      myrows.push(<tr>{currentrow}</tr>)   \n    }\n  mytable.push(<tbody>{myrows}</tbody>)\n    \n    setData(rows)\n    setloaded(true)\n    }\n});\n  }, [reload]);\n\n\n  \n  return (\n    <div className=\"App \">\n      <div>\n        <h1>HW1 COE526</h1>\n      </div>\n      <form onSubmit={dataSubmitHandler}>\n      <label className=\"b\"> Link to Load data (csv, with Headers): </label>\n      <input className=\"bg-lightest-blue ba b--green\" type=\"text\"  onChange={onLinkChange} value={link}></input>\n      <button > Load </button>\n      </form>\n      <div className=\"orange bg-black-90 pa1\">\n      <p >Note: This tool assumes that everything is a quasi identifier except the last column which counts as a sensitive atrribute\n        <br/>\n        After trying more than 1 k value some statistics will appear on the stats tab.\n        <br/>\n        The following table only shows a few records from the imported data set\n      </p>\n      </div>\n      {loaded? \n      <table className=\"shadow-2 ba center ma2\" cellPadding=\"0\" cellSpacing=\"0\">\n      {mytable}\n\n    </table>\n    :\n    <h4>Loading Data..</h4>}\n      \n      <div className=\"pa2\">\n        <form onSubmit={submitHandler}>\n      <label className=\"b\"> K value: </label>\n      <input className=\"bg-lightest-blue ba b--green\" type=\"number\" min=\"2\" max=\"10\" onChange={onkChange} value={k}></input>\n      <button > Generate </button>\n      </form>\n      </div>\n      <div>\n        <h2>Equivalent Classes</h2>\n        { reGenerate<3 ? \n        <EC k={k} rows={data} headers={ECheaders} reGenerate={reGenerate} reload={reload}/>\n        :\n        <h3>Click Generate to show tables & statistics...</h3>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n {/* <thead>\n            <tr>\n              <td>Age</td><td>Gender</td><td>Marital</td><td>Race Status</td>\n              <td>Birth place</td><td>Language</td><td>Occupation</td><td>Income (K)</td>\n              \n            </tr>\n          </thead> */}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"tachyons\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}